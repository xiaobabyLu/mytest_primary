<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaobaby.myproject.mysql.mapper.OfflineDataEntryMapper">
  <resultMap id="BaseResultMap" type="com.xiaobaby.myproject.mysql.model.OfflineDataEntry">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="report_date" jdbcType="INTEGER" property="reportDate" />
    <result column="data_type" jdbcType="INTEGER" property="dataType" />
    <result column="data_type_name" jdbcType="VARCHAR" property="dataTypeName" />
    <result column="store_id" jdbcType="VARCHAR" property="storeId" />
    <result column="city_id" jdbcType="VARCHAR" property="cityId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="type_name" jdbcType="VARCHAR" property="typeName" />
    <result column="sub_type" jdbcType="INTEGER" property="subType" />
    <result column="sub_type_name" jdbcType="VARCHAR" property="subTypeName" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="key_list" jdbcType="VARCHAR" property="keyList" />
    <result column="value_list" jdbcType="VARCHAR" property="valueList" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, report_date, data_type, data_type_name, store_id, city_id, type, type_name, sub_type, 
    sub_type_name, status, amount, key_list, value_list, creator, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.xiaobaby.myproject.mysql.model.OfflineDataEntryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from offline_data_entry
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from offline_data_entry
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from offline_data_entry
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xiaobaby.myproject.mysql.model.OfflineDataEntryExample">
    delete from offline_data_entry
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xiaobaby.myproject.mysql.model.OfflineDataEntry">
    insert into offline_data_entry (id, report_date, data_type, 
      data_type_name, store_id, city_id, 
      type, type_name, sub_type, 
      sub_type_name, status, amount, 
      key_list, value_list, creator, 
      create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{reportDate,jdbcType=INTEGER}, #{dataType,jdbcType=INTEGER}, 
      #{dataTypeName,jdbcType=VARCHAR}, #{storeId,jdbcType=VARCHAR}, #{cityId,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{typeName,jdbcType=VARCHAR}, #{subType,jdbcType=INTEGER}, 
      #{subTypeName,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{amount,jdbcType=DOUBLE}, 
      #{keyList,jdbcType=VARCHAR}, #{valueList,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaobaby.myproject.mysql.model.OfflineDataEntry">
    insert into offline_data_entry
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="reportDate != null">
        report_date,
      </if>
      <if test="dataType != null">
        data_type,
      </if>
      <if test="dataTypeName != null">
        data_type_name,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="cityId != null">
        city_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="typeName != null">
        type_name,
      </if>
      <if test="subType != null">
        sub_type,
      </if>
      <if test="subTypeName != null">
        sub_type_name,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="keyList != null">
        key_list,
      </if>
      <if test="valueList != null">
        value_list,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="reportDate != null">
        #{reportDate,jdbcType=INTEGER},
      </if>
      <if test="dataType != null">
        #{dataType,jdbcType=INTEGER},
      </if>
      <if test="dataTypeName != null">
        #{dataTypeName,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="typeName != null">
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="subType != null">
        #{subType,jdbcType=INTEGER},
      </if>
      <if test="subTypeName != null">
        #{subTypeName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="keyList != null">
        #{keyList,jdbcType=VARCHAR},
      </if>
      <if test="valueList != null">
        #{valueList,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiaobaby.myproject.mysql.model.OfflineDataEntryExample" resultType="java.lang.Long">
    select count(*) from offline_data_entry
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update offline_data_entry
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.reportDate != null">
        report_date = #{record.reportDate,jdbcType=INTEGER},
      </if>
      <if test="record.dataType != null">
        data_type = #{record.dataType,jdbcType=INTEGER},
      </if>
      <if test="record.dataTypeName != null">
        data_type_name = #{record.dataTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=VARCHAR},
      </if>
      <if test="record.cityId != null">
        city_id = #{record.cityId,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.typeName != null">
        type_name = #{record.typeName,jdbcType=VARCHAR},
      </if>
      <if test="record.subType != null">
        sub_type = #{record.subType,jdbcType=INTEGER},
      </if>
      <if test="record.subTypeName != null">
        sub_type_name = #{record.subTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.keyList != null">
        key_list = #{record.keyList,jdbcType=VARCHAR},
      </if>
      <if test="record.valueList != null">
        value_list = #{record.valueList,jdbcType=VARCHAR},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update offline_data_entry
    set id = #{record.id,jdbcType=BIGINT},
      report_date = #{record.reportDate,jdbcType=INTEGER},
      data_type = #{record.dataType,jdbcType=INTEGER},
      data_type_name = #{record.dataTypeName,jdbcType=VARCHAR},
      store_id = #{record.storeId,jdbcType=VARCHAR},
      city_id = #{record.cityId,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      type_name = #{record.typeName,jdbcType=VARCHAR},
      sub_type = #{record.subType,jdbcType=INTEGER},
      sub_type_name = #{record.subTypeName,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=DOUBLE},
      key_list = #{record.keyList,jdbcType=VARCHAR},
      value_list = #{record.valueList,jdbcType=VARCHAR},
      creator = #{record.creator,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaobaby.myproject.mysql.model.OfflineDataEntry">
    update offline_data_entry
    <set>
      <if test="reportDate != null">
        report_date = #{reportDate,jdbcType=INTEGER},
      </if>
      <if test="dataType != null">
        data_type = #{dataType,jdbcType=INTEGER},
      </if>
      <if test="dataTypeName != null">
        data_type_name = #{dataTypeName,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null">
        city_id = #{cityId,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="typeName != null">
        type_name = #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="subType != null">
        sub_type = #{subType,jdbcType=INTEGER},
      </if>
      <if test="subTypeName != null">
        sub_type_name = #{subTypeName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="keyList != null">
        key_list = #{keyList,jdbcType=VARCHAR},
      </if>
      <if test="valueList != null">
        value_list = #{valueList,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaobaby.myproject.mysql.model.OfflineDataEntry">
    update offline_data_entry
    set report_date = #{reportDate,jdbcType=INTEGER},
      data_type = #{dataType,jdbcType=INTEGER},
      data_type_name = #{dataTypeName,jdbcType=VARCHAR},
      store_id = #{storeId,jdbcType=VARCHAR},
      city_id = #{cityId,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      type_name = #{typeName,jdbcType=VARCHAR},
      sub_type = #{subType,jdbcType=INTEGER},
      sub_type_name = #{subTypeName,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DOUBLE},
      key_list = #{keyList,jdbcType=VARCHAR},
      value_list = #{valueList,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.xiaobaby.myproject.mysql.model.OfflineDataEntryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from offline_data_entry
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>